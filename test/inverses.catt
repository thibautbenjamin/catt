# Inverses of applied invertible coherences
let id_inv (x : *) = I (id x)
coh assoc (x(f)y(g)z(h)w) : comp (comp f g) h -> comp f (comp g h)
coh unbiase (x(f)y(g)z(h)w) : comp f (comp g h) -> comp f g h
coh unitl (x(f)y) : comp (id x) f -> f
coh 21comp (x(f(a)g(b)h)y(k(d)l)z) : comp f k -> comp h l
coh 2whisk (x(f(a)g(b)h)y(k)z) : comp f k -> comp h k

let assoc_inv (x : *) (y : *) (f : x -> y)
                      (z : *) (g : y -> z)
                      (w : *) (h : z -> w)
    = I (assoc f g h)

let unbiase_inv (x : *) (y : *) (f : x -> y)
                        (z : *) (g : y -> z)
                        (w : *) (h : z -> w)
    = I (unbiase f g h)

let unitl_inv (x : *) (f : x -> x)
    = I (unitl f)

# Inverses of applied non-invertible coherences
let assoc_unbiase_inv (x : *) (f : x -> x) =
    I (comp (assoc f f f) (unbiase f f f))

let id_id_inv (x : *) =
    I(comp (id x) (id x))

check (x : *) (f : x -> x) =
    I (comp (id x) [comp (assoc f f f) (unbiase f f f)] (id x))

check (x : *) (f : x -> x) =
    I (21comp (assoc f f f) (unbiase f f f) (assoc f f f))

check (x : *) (f : x -> x) =
    I (2whisk (id f) (id f) f)

check (x : *) (f : x -> x) =
    I (comp [comp (assoc (id f) (id f) (id f)) (unbiase (id f) (id f) (id f))] (id f))

check (x : *) (y : *) (f : x -> x) (g : x -> y) =
    I (comp [comp (assoc f f f) (unbiase f f f)] (comp (id x) (I (id x))) [I (comp (id g) (id g))] (id y))


# Inverses with explicit arguments
set explicit_substitutions = t
check (x : *) (y : *) (f : x -> y) (z : *) (g : y -> z) (w : *) (h : z -> w) =
I (assoc x y f z g w h)

set explicit_substitutions = f
# Witnesses of applied invertible coherences
check
        (x : *) (y : *) (f : x -> y)
        (z : *) (g : y -> z)
        (w : *) (h : z -> w)
    = U (assoc f g h)
